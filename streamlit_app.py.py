# -*- coding: utf-8 -*-
"""app.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1P0cs8lsOiMBytcs9oUtaHnP1kRni7h-L
"""

import streamlit as st
import numpy as np
import pandas as pd
import pickle

from sklearn.preprocessing import StandardScaler


# === Load Model ===
# Load
from keras.models import load_model
model = load_model("04_creditcard.h5")

#with open('04_house_price.h5', 'rb') as f:
#    model = pickle.load(f)
#    print("‚úÖ Model loaded successfully.")

# === Streamlit App ===
st.title("üè† Credit Card fraud detection")

st.markdown("Fill in the details below to predict the creditcard fraud.")

# === User Input ===
POSTED_BY = st.selectbox(
    "Posted By",
    options=["Owner", "Dealer", "Builder"]
)


Time = st.number_input("Time", value=13.0189)
V1 = st.number_input("V1", value=0.686132504)
V2 = st.number_input("V2", value=0.686132504)
V3 = st.number_input("V3", value=0.686132504)
V4 = st.number_input("V4", value=0.686132504)
V5 = st.number_input("V5", value=0.686132504)
V6 = st.number_input("V6", value=0.686132504)
V7 = st.number_input("V7", value=0.686132504)
V8 = st.number_input("V8", value=0.686132504)
V9 = st.number_input("V9", value=0.686132504)
V10 = st.number_input("V10", value=0.686132504)
V11 = st.number_input("V11", value=0.686132504)
V12 = st.number_input("V12", value=0.686132504)
V13 = st.number_input("V13", value=0.686132504)
V14 = st.number_input("V14", value=0.686132504)
V15 = st.number_input("V15", value=0.686132504)
V16 = st.number_input("V16", value=0.686132504)
V17 = st.number_input("V17", value=0.686132504)
V18 = st.number_input("V18", value=0.686132504)
V19 = st.number_input("V19", value=0.686132504)
V20 = st.number_input("V20", value=0.686132504)
V21 = st.number_input("V21", value=0.686132504)
V22 = st.number_input("V22", value=0.686132504)
V23 = st.number_input("V23", value=0.686132504)
V24 = st.number_input("V24", value=0.686132504)
V25 = st.number_input("V25", value=0.686132504)
V26 = st.number_input("V26", value=0.686132504)
V27 = st.number_input("V27", value=0.686132504)
V28 = st.number_input("V28", value=0.686132504)
Amount = st.number_input("Amount", value=13.0189)

# Predict button
if st.button("Predict"):
        # Scale numerical features (fitting on one row ‚Äî demo only!)
    scaler = StandardScaler()
    scaled_Time = scaler.fit_transform(Time)
    scaled_Amount = scaler.fit_transform(Amount)
    # Prepare input as DataFrame
    input_df = pd.DataFrame([{
        Time : scaled_Time,
        V1 : V1 ,
        V2 : V2 ,
        V3 : V3 ,
        V4 : V4 ,
        V5 : V5 ,
        V6 : V6 ,
        V7 : V7 ,
        V8 : V8 ,
        V9 : V9 ,
        V10 : V10,
        V11 : V11,
        V12 : V12,
        V13 : V13,
        V14 : V14,
        V15 : V15,
        V16 : V16,
        V17 : V17,
        V18 : V18,
        V19 : V19,
        V20 : V20,
        V21 : V21,
        V22 : V22,
        V23 : V23,
        V24 : V24,
        V25 : V25,
        V26 : V26,
        V27 : V27,
        V28 : V28,
        Amount : scaled_Amount
    }])



    # Combine with unscaled categorical features
    #full_input = np.concatenate([[POSTED_BY_enc], scaled_array[0], [BHK_OR_RK_enc]])
    full_input_2d = input_df.reshape(1, -1)

    # Predict
    predicted_value = model.predict(full_input_2d)

    st.success(f"üìä Predicted Fraud Value: {predicted_value[0].item():,.2f}")